
-- generated by using spec/Declarations.yaml

{-# LANGUAGE DataKinds #-}
{-# LANGUAGE PolyKinds #-}
{-# LANGUAGE TemplateHaskell #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE OverloadedStrings #-}

module Torch.Internal.Managed.Native.Native7 where


import Foreign.C.String
import Foreign.C.Types
import Foreign
import Torch.Internal.Type
import Torch.Internal.Class
import Torch.Internal.Cast
import Torch.Internal.Objects
import qualified Torch.Internal.Unmanaged.Native.Native7 as Unmanaged


sin_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sin_t = cast1 Unmanaged.sin_t

sin__t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sin__t = cast1 Unmanaged.sin__t

sin_out_tt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sin_out_tt = cast2 Unmanaged.sin_out_tt

sinh_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sinh_t = cast1 Unmanaged.sinh_t

sinh__t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sinh__t = cast1 Unmanaged.sinh__t

sinh_out_tt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sinh_out_tt = cast2 Unmanaged.sinh_out_tt

detach_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
detach_t = cast1 Unmanaged.detach_t

detach__t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
detach__t = cast1 Unmanaged.detach__t

size_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (Int64)
size_tl = cast2 Unmanaged.size_tl

size_tn
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> IO (Int64)
size_tn = cast2 Unmanaged.size_tn

slice_tllll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
slice_tllll = cast5 Unmanaged.slice_tllll

slice_tlll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
slice_tlll = cast4 Unmanaged.slice_tlll

slice_tll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
slice_tll = cast3 Unmanaged.slice_tll

slice_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
slice_tl = cast2 Unmanaged.slice_tl

slice_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
slice_t = cast1 Unmanaged.slice_t

slogdet_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
slogdet_t = cast1 Unmanaged.slogdet_t

smm_tt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
smm_tt = cast2 Unmanaged.smm_tt

softmax_tls
  :: ForeignPtr Tensor
  -> Int64
  -> ScalarType
  -> IO (ForeignPtr Tensor)
softmax_tls = cast3 Unmanaged.softmax_tls

softmax_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
softmax_tl = cast2 Unmanaged.softmax_tl

softmax_tns
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> ScalarType
  -> IO (ForeignPtr Tensor)
softmax_tns = cast3 Unmanaged.softmax_tns

softmax_tn
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> IO (ForeignPtr Tensor)
softmax_tn = cast2 Unmanaged.softmax_tn

_softmax_tlb
  :: ForeignPtr Tensor
  -> Int64
  -> CBool
  -> IO (ForeignPtr Tensor)
_softmax_tlb = cast3 Unmanaged._softmax_tlb

_softmax_backward_data_ttlt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> Int64
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
_softmax_backward_data_ttlt = cast4 Unmanaged._softmax_backward_data_ttlt

split_tll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> IO (ForeignPtr TensorList)
split_tll = cast3 Unmanaged.split_tll

split_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr TensorList)
split_tl = cast2 Unmanaged.split_tl

split_with_sizes_tll
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> Int64
  -> IO (ForeignPtr TensorList)
split_with_sizes_tll = cast3 Unmanaged.split_with_sizes_tll

split_with_sizes_tl
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> IO (ForeignPtr TensorList)
split_with_sizes_tl = cast2 Unmanaged.split_with_sizes_tl

squeeze_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
squeeze_t = cast1 Unmanaged.squeeze_t

squeeze_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
squeeze_tl = cast2 Unmanaged.squeeze_tl

squeeze_tn
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> IO (ForeignPtr Tensor)
squeeze_tn = cast2 Unmanaged.squeeze_tn

sspaddmm_tttss
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
sspaddmm_tttss = cast5 Unmanaged.sspaddmm_tttss

sspaddmm_ttts
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
sspaddmm_ttts = cast4 Unmanaged.sspaddmm_ttts

sspaddmm_ttt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sspaddmm_ttt = cast3 Unmanaged.sspaddmm_ttt

sspaddmm_out_ttttss
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
sspaddmm_out_ttttss = cast6 Unmanaged.sspaddmm_out_ttttss

sspaddmm_out_tttts
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
sspaddmm_out_tttts = cast5 Unmanaged.sspaddmm_out_tttts

sspaddmm_out_tttt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sspaddmm_out_tttt = cast4 Unmanaged.sspaddmm_out_tttt

stack_ll
  :: ForeignPtr TensorList
  -> Int64
  -> IO (ForeignPtr Tensor)
stack_ll = cast2 Unmanaged.stack_ll

stack_l
  :: ForeignPtr TensorList
  -> IO (ForeignPtr Tensor)
stack_l = cast1 Unmanaged.stack_l

stack_out_tll
  :: ForeignPtr Tensor
  -> ForeignPtr TensorList
  -> Int64
  -> IO (ForeignPtr Tensor)
stack_out_tll = cast3 Unmanaged.stack_out_tll

stack_out_tl
  :: ForeignPtr Tensor
  -> ForeignPtr TensorList
  -> IO (ForeignPtr Tensor)
stack_out_tl = cast2 Unmanaged.stack_out_tl

stft_tllltbb
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> CBool
  -> CBool
  -> IO (ForeignPtr Tensor)
stft_tllltbb = cast7 Unmanaged.stft_tllltbb

stft_tllltb
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> CBool
  -> IO (ForeignPtr Tensor)
stft_tllltb = cast6 Unmanaged.stft_tllltb

stft_tlllt
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
stft_tlllt = cast5 Unmanaged.stft_tlllt

stft_tlll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
stft_tlll = cast4 Unmanaged.stft_tlll

stft_tll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
stft_tll = cast3 Unmanaged.stft_tll

stft_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
stft_tl = cast2 Unmanaged.stft_tl

istft_tllltbbbl
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> CBool
  -> CBool
  -> CBool
  -> Int64
  -> IO (ForeignPtr Tensor)
istft_tllltbbbl = cast9 Unmanaged.istft_tllltbbbl

istft_tllltbbb
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> CBool
  -> CBool
  -> CBool
  -> IO (ForeignPtr Tensor)
istft_tllltbbb = cast8 Unmanaged.istft_tllltbbb

istft_tllltbb
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> CBool
  -> CBool
  -> IO (ForeignPtr Tensor)
istft_tllltbb = cast7 Unmanaged.istft_tllltbb

istft_tllltb
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> CBool
  -> IO (ForeignPtr Tensor)
istft_tllltb = cast6 Unmanaged.istft_tllltb

istft_tlllt
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
istft_tlllt = cast5 Unmanaged.istft_tlllt

istft_tlll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
istft_tlll = cast4 Unmanaged.istft_tlll

istft_tll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
istft_tll = cast3 Unmanaged.istft_tll

istft_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
istft_tl = cast2 Unmanaged.istft_tl

stride_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (Int64)
stride_tl = cast2 Unmanaged.stride_tl

stride_tn
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> IO (Int64)
stride_tn = cast2 Unmanaged.stride_tn

sum_ts
  :: ForeignPtr Tensor
  -> ScalarType
  -> IO (ForeignPtr Tensor)
sum_ts = cast2 Unmanaged.sum_ts

sum_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sum_t = cast1 Unmanaged.sum_t

sum_tlbs
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
sum_tlbs = cast4 Unmanaged.sum_tlbs

sum_tlb
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> IO (ForeignPtr Tensor)
sum_tlb = cast3 Unmanaged.sum_tlb

sum_tl
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> IO (ForeignPtr Tensor)
sum_tl = cast2 Unmanaged.sum_tl

sum_tNbs
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
sum_tNbs = cast4 Unmanaged.sum_tNbs

sum_tNb
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> IO (ForeignPtr Tensor)
sum_tNb = cast3 Unmanaged.sum_tNb

sum_tN
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> IO (ForeignPtr Tensor)
sum_tN = cast2 Unmanaged.sum_tN

sum_out_ttlbs
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
sum_out_ttlbs = cast5 Unmanaged.sum_out_ttlbs

sum_out_ttlb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> IO (ForeignPtr Tensor)
sum_out_ttlb = cast4 Unmanaged.sum_out_ttlb

sum_out_ttl
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> IO (ForeignPtr Tensor)
sum_out_ttl = cast3 Unmanaged.sum_out_ttl

sum_out_ttNbs
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
sum_out_ttNbs = cast5 Unmanaged.sum_out_ttNbs

sum_out_ttNb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> IO (ForeignPtr Tensor)
sum_out_ttNb = cast4 Unmanaged.sum_out_ttNb

sum_out_ttN
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> IO (ForeignPtr Tensor)
sum_out_ttN = cast3 Unmanaged.sum_out_ttN

sqrt_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sqrt_t = cast1 Unmanaged.sqrt_t

sqrt__t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sqrt__t = cast1 Unmanaged.sqrt__t

sqrt_out_tt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
sqrt_out_tt = cast2 Unmanaged.sqrt_out_tt

square_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
square_t = cast1 Unmanaged.square_t

square__t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
square__t = cast1 Unmanaged.square__t

std_tb
  :: ForeignPtr Tensor
  -> CBool
  -> IO (ForeignPtr Tensor)
std_tb = cast2 Unmanaged.std_tb

std_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
std_t = cast1 Unmanaged.std_t

std_tlbb
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> CBool
  -> IO (ForeignPtr Tensor)
std_tlbb = cast4 Unmanaged.std_tlbb

std_tlb
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> IO (ForeignPtr Tensor)
std_tlb = cast3 Unmanaged.std_tlb

std_tl
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> IO (ForeignPtr Tensor)
std_tl = cast2 Unmanaged.std_tl

std_mean_tb
  :: ForeignPtr Tensor
  -> CBool
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_tb = cast2 Unmanaged.std_mean_tb

std_mean_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_t = cast1 Unmanaged.std_mean_t

std_mean_tlbb
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> CBool
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_tlbb = cast4 Unmanaged.std_mean_tlbb

std_mean_tlb
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_tlb = cast3 Unmanaged.std_mean_tlb

std_mean_tl
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_tl = cast2 Unmanaged.std_mean_tl

std_mean_tNbb
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> CBool
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_tNbb = cast4 Unmanaged.std_mean_tNbb

std_mean_tNb
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_tNb = cast3 Unmanaged.std_mean_tNb

std_mean_tN
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> IO (ForeignPtr (StdTuple '(Tensor,Tensor)))
std_mean_tN = cast2 Unmanaged.std_mean_tN

std_out_ttlbb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> CBool
  -> IO (ForeignPtr Tensor)
std_out_ttlbb = cast5 Unmanaged.std_out_ttlbb

std_out_ttlb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> CBool
  -> IO (ForeignPtr Tensor)
std_out_ttlb = cast4 Unmanaged.std_out_ttlb

std_out_ttl
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> IO (ForeignPtr Tensor)
std_out_ttl = cast3 Unmanaged.std_out_ttl

std_tNbb
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> CBool
  -> IO (ForeignPtr Tensor)
std_tNbb = cast4 Unmanaged.std_tNbb

std_tNb
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> IO (ForeignPtr Tensor)
std_tNb = cast3 Unmanaged.std_tNb

std_tN
  :: ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> IO (ForeignPtr Tensor)
std_tN = cast2 Unmanaged.std_tN

std_out_ttNbb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> CBool
  -> IO (ForeignPtr Tensor)
std_out_ttNbb = cast5 Unmanaged.std_out_ttNbb

std_out_ttNb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> CBool
  -> IO (ForeignPtr Tensor)
std_out_ttNb = cast4 Unmanaged.std_out_ttNb

std_out_ttN
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr DimnameList
  -> IO (ForeignPtr Tensor)
std_out_ttN = cast3 Unmanaged.std_out_ttN

prod_ts
  :: ForeignPtr Tensor
  -> ScalarType
  -> IO (ForeignPtr Tensor)
prod_ts = cast2 Unmanaged.prod_ts

prod_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
prod_t = cast1 Unmanaged.prod_t

prod_tlbs
  :: ForeignPtr Tensor
  -> Int64
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
prod_tlbs = cast4 Unmanaged.prod_tlbs

prod_tlb
  :: ForeignPtr Tensor
  -> Int64
  -> CBool
  -> IO (ForeignPtr Tensor)
prod_tlb = cast3 Unmanaged.prod_tlb

prod_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
prod_tl = cast2 Unmanaged.prod_tl

prod_out_ttlbs
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> Int64
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
prod_out_ttlbs = cast5 Unmanaged.prod_out_ttlbs

prod_out_ttlb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> Int64
  -> CBool
  -> IO (ForeignPtr Tensor)
prod_out_ttlb = cast4 Unmanaged.prod_out_ttlb

prod_out_ttl
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
prod_out_ttl = cast3 Unmanaged.prod_out_ttl

prod_tnbs
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
prod_tnbs = cast4 Unmanaged.prod_tnbs

prod_tnb
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> CBool
  -> IO (ForeignPtr Tensor)
prod_tnb = cast3 Unmanaged.prod_tnb

prod_tn
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> IO (ForeignPtr Tensor)
prod_tn = cast2 Unmanaged.prod_tn

prod_out_ttnbs
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> CBool
  -> ScalarType
  -> IO (ForeignPtr Tensor)
prod_out_ttnbs = cast5 Unmanaged.prod_out_ttnbs

prod_out_ttnb
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> CBool
  -> IO (ForeignPtr Tensor)
prod_out_ttnb = cast4 Unmanaged.prod_out_ttnb

prod_out_ttn
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> IO (ForeignPtr Tensor)
prod_out_ttn = cast3 Unmanaged.prod_out_ttn

t_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
t_t = cast1 Unmanaged.t_t

tan_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
tan_t = cast1 Unmanaged.tan_t

tan__t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
tan__t = cast1 Unmanaged.tan__t

tan_out_tt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
tan_out_tt = cast2 Unmanaged.tan_out_tt

tanh_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
tanh_t = cast1 Unmanaged.tanh_t

tanh__t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
tanh__t = cast1 Unmanaged.tanh__t

tanh_out_tt
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
tanh_out_tt = cast2 Unmanaged.tanh_out_tt

tensordot_ttll
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> ForeignPtr IntArray
  -> IO (ForeignPtr Tensor)
tensordot_ttll = cast4 Unmanaged.tensordot_ttll

threshold_tss
  :: ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
threshold_tss = cast3 Unmanaged.threshold_tss

threshold__tss
  :: ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
threshold__tss = cast3 Unmanaged.threshold__tss

threshold_out_ttss
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
threshold_out_ttss = cast4 Unmanaged.threshold_out_ttss

threshold_backward_tts
  :: ForeignPtr Tensor
  -> ForeignPtr Tensor
  -> ForeignPtr Scalar
  -> IO (ForeignPtr Tensor)
threshold_backward_tts = cast3 Unmanaged.threshold_backward_tts

transpose_tll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
transpose_tll = cast3 Unmanaged.transpose_tll

transpose_tnn
  :: ForeignPtr Tensor
  -> ForeignPtr Dimname
  -> ForeignPtr Dimname
  -> IO (ForeignPtr Tensor)
transpose_tnn = cast3 Unmanaged.transpose_tnn

_mkldnn_transpose_tll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
_mkldnn_transpose_tll = cast3 Unmanaged._mkldnn_transpose_tll

_mkldnn_transpose__tll
  :: ForeignPtr Tensor
  -> Int64
  -> Int64
  -> IO (ForeignPtr Tensor)
_mkldnn_transpose__tll = cast3 Unmanaged._mkldnn_transpose__tll

one_hot_tl
  :: ForeignPtr Tensor
  -> Int64
  -> IO (ForeignPtr Tensor)
one_hot_tl = cast2 Unmanaged.one_hot_tl

one_hot_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
one_hot_t = cast1 Unmanaged.one_hot_t

flip_tl
  :: ForeignPtr Tensor
  -> ForeignPtr IntArray
  -> IO (ForeignPtr Tensor)
flip_tl = cast2 Unmanaged.flip_tl

fliplr_t
  :: ForeignPtr Tensor
  -> IO (ForeignPtr Tensor)
fliplr_t = cast1 Unmanaged.fliplr_t

