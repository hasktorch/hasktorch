cabal-version:       2.1
name:                libtorch-ffi
version:             1.1.0.0
-- The prefix(1.1) of this version("1.1.0.0") is the same as libtorch's one.
synopsis:            test out alternative options for ffi interface to libtorch 1.x
-- description:
homepage:            https://github.com/hasktorch/hasktorch#readme
license:             BSD-3-Clause
author:              Austin Huang
maintainer:          hasktorch@gmail.com
copyright:           2018 Austin Huang
category:            Codegen
build-type:          Simple

library
 exposed-modules:     ATen.Type
                    , ATen.Const
                    , ATen.Cast
                    , ATen.Class
                    , ATen.GC
                    , ATen.Unmanaged.Native
                    , ATen.Unmanaged.Type.Tuple
                    , ATen.Unmanaged.Type.Generator
                    , ATen.Unmanaged.Type.IntArray
                    , ATen.Unmanaged.Type.Scalar
                    , ATen.Unmanaged.Type.Storage
                    , ATen.Unmanaged.Type.Tensor
                    , ATen.Unmanaged.Type.TensorList
                    , ATen.Unmanaged.Type.TensorOptions
                    , ATen.Unmanaged.Type.StdString
                    , ATen.Unmanaged.Type.StdArray
                    , ATen.Unmanaged.Type.Context
                    , ATen.Unmanaged.Type.ConstQuantizerPtr
                    , ATen.Unmanaged.Type.Extra
                    , ATen.Managed.Cast
                    , ATen.Managed.Native
                    , ATen.Managed.Type.Tuple
                    , ATen.Managed.Type.Generator
                    , ATen.Managed.Type.IntArray
                    , ATen.Managed.Type.Scalar
                    , ATen.Managed.Type.Storage
                    , ATen.Managed.Type.Tensor
                    , ATen.Managed.Type.TensorList
                    , ATen.Managed.Type.TensorOptions
                    , ATen.Managed.Type.StdString
                    , ATen.Managed.Type.StdArray
                    , ATen.Managed.Type.Context
                    , ATen.Managed.Type.ConstQuantizerPtr
                    , ATen.Managed.Type.Extra
                    , Torch.Unmanaged.Autograd
                    , Torch.Unmanaged.Native
                    , Torch.Managed.Autograd
                    , Torch.Managed.Native
 hs-source-dirs: src
 default-language: Haskell2010
 build-depends:       base >= 4.7 && < 5
                    , inline-c-cpp >= 0.3.0.1
                    , inline-c
                    , optparse-applicative >= 0.14.3.0
                    , containers
                    , template-haskell
                    , bytestring
                    , safe-exceptions
                    , sysinfo
                    , async
 if os(darwin)
  extra-libraries:     c++
                     , c10
                     , torch
 else
  extra-libraries:     stdc++
                     , c10
                     , torch
 extra-ghci-libraries: stdc++
 if os(darwin)
  ld-options: -Wl,-keep_dwarf_unwind
  ghc-options:       -optc-std=c++11 -optc-xc++
 else
  ghc-options:       -optc-std=c++11
 cc-options:        -std=c++11
 cxx-options:       -std=c++11
 default-extensions:          Strict
                            , StrictData


test-suite spec
  type:            exitcode-stdio-1.0
  hs-source-dirs:  test
  main-is:         Spec.hs
  other-modules:   BasicSpec
                 , MemorySpec
                 , BackwardSpec
                 , CudaSpec
  default-language: Haskell2010
  build-depends:       base >= 4.7 && < 5
                     , inline-c-cpp >= 0.3.0.1
                     , inline-c
                     , optparse-applicative >= 0.14.3.0
                     , containers
                     , libtorch-ffi
                     , hspec
                     , hspec-discover
                     , safe-exceptions
  if os(darwin)
    ld-options: -Wl,-keep_dwarf_unwind
    ghc-options:       -optc-std=c++11 -optc-xc++
  else
    ghc-options:       -optc-std=c++11
  cc-options:        -std=c++11
  cxx-options:       -std=c++11
  default-extensions:          Strict
                             , StrictData
